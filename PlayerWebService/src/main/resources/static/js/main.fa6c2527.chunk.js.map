{
  "version": 3,
  "sources": [
    "model/actions/track.js",
    "model/actions/socket.js",
    "model/actions/user.js",
    "model/reducers/user.js",
    "model/store.js",
    "model/reducers/track.js",
    "model/reducers/socket.js",
    "ui/containers/List.js",
    "ui/containers/Player.js",
    "ui/containers/Root.js",
    "App.js",
    "index.js"
  ],
  "names": [
    "SYNC_TRACK",
    "WAIT_NEXT",
    "getNext",
    "id",
    "dispatch",
    "type",
    "send",
    "SOCKET_START",
    "SOCKET_MESSAGE",
    "SET_CONNECTION",
    "stompClient",
    "socket",
    "SockJS",
    "concat",
    "USER_LOGIN_START",
    "USER_LOGIN_OK",
    "USER_LOGIN_ERR",
    "middleware",
    "thunk",
    "reducer",
    "combineReducers",
    "user",
    "state",
    "action",
    "fetching",
    "admin",
    "Object",
    "objectSpread",
    "track",
    "play",
    "data",
    "getState",
    "connection",
    "musicList",
    "store",
    "createStore",
    "connected",
    "applyMiddleware",
    "apply",
    "Wrapper",
    "styled",
    "div",
    "_templateObject",
    "Playlist",
    "playlist",
    "this",
    "props",
    "list",
    "react_default",
    "a",
    "createElement",
    "List",
    "divided",
    "relaxed",
    "map",
    "item",
    "i",
    "Item",
    "key",
    "Icon",
    "name",
    "size",
    "verticalAlign",
    "Content",
    "Header",
    "trackName",
    "Description",
    "artistName",
    "icon",
    "Component",
    "connect",
    "_ref",
    "Player_templateObject",
    "LoaderWrapper",
    "_templateObject2",
    "Heading",
    "_templateObject3",
    "Loading",
    "Loader",
    "active",
    "Player",
    "onEnd",
    "_this",
    "nextProps",
    "player",
    "audio",
    "_this2",
    "Player_Loading",
    "trackUrl",
    "Player_Wrapper",
    "Subheader",
    "lib_default",
    "controls",
    "ref",
    "c",
    "onEnded",
    "src",
    "autoPlay",
    "Root",
    "classCallCheck",
    "possibleConstructorReturn",
    "getPrototypeOf",
    "call",
    "match",
    "params",
    "Stomp",
    "over",
    "frame",
    "ws",
    "readyState",
    "subscribe",
    "json",
    "JSON",
    "parse",
    "body",
    "nowPlaying",
    "trackList",
    "console",
    "log",
    "disconnect",
    "nextConnection",
    "setTimeout",
    "Fragment",
    "containers_Player",
    "containers_List",
    "App",
    "BrowserRouter",
    "es",
    "Switch",
    "Route",
    "exact",
    "path",
    "component",
    "GlobalStyle",
    "createGlobalStyle",
    "src_templateObject",
    "ReactDOM",
    "render",
    "src_App",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.fa6c2527.chunk.js",
  "sourcesContent": [
    "import {dispatch} from '../store'\nimport {send} from './socket'\nexport const SYNC_TRACK = 'SYNC_TRACK'\nexport const WAIT_NEXT = 'WAIT_NEXT'\n\nexport default function () {\n    dispatch({\n        type: SYNC_TRACK \n    })\n}\n\nexport function getNext (id) {\n    dispatch({\n        type: WAIT_NEXT \n    })\n    send(id)\n}",
    "import {dispatch} from '../store'\n// import socket from '../../fetch/socket'\nimport SockJS from 'sockjs-client'\nimport Stomp from 'stompjs'\nimport {SYNC_TRACK} from './track'\nexport const SOCKET_START = 'SOCKET_START'\nexport const SOCKET_MESSAGE = 'SOCKET_MESSAGE'\nexport const SOCKET_ERROR = 'SOCKET_ERROR'\nexport const SET_CONNECTION = 'SET_CONNECTION'\n\nexport let stompClient = null;\nconst socket = new SockJS('http://10.8.30.31:8100/ws');\n// const socket = new SockJS('http://10.8.30.31:8100/ws');\n\n\nexport function send(id){\n    stompClient.send(`/app/test/${id}`)\n}\n\nexport function init(){\n    stompClient.send(`/test/handshake/`)\n}\n\nexport function connect(id) {\n    stompClient = Stomp.over(socket);\n\n    stompClient.connect({}, frame => {\n        dispatch({\n            type: SOCKET_START\n        })\n        dispatch({\n            type: SET_CONNECTION,\n            data: {\n                connected: !!stompClient.ws.readyState\n            }  \n        })\n        stompClient.subscribe(`/topic/test/${id}`, data => {\n            const json = JSON.parse(data.body)\n            if(json.nowPlaying){\n                dispatch({\n                    type: SYNC_TRACK,\n                    data: json.nowPlaying\n                })\n            } \n\n            if(json.trackList){\n                dispatch({\n                    type: SOCKET_MESSAGE,\n                    data: {\n                        list: json.trackList\n                    }\n                })\n            }\n            \n            dispatch({\n                type: SET_CONNECTION,\n                data: {\n                    connected: !!stompClient.ws.readyState\n                } \n            })\n        });\n    });\n}\n\nexport function disconnect() {\n    console.log('disconnect')\n    stompClient.disconnect();\n}\n",
    "import {dispatch} from '../store'\n\nexport const USER_LOGIN_START = 'USER_LOGIN_START'\nexport const USER_LOGIN_OK = 'USER_LOGIN_OK'\nexport const USER_LOGIN_ERR = 'USER_LOGIN_ERR'\n\nfunction login () {\n    \n}\n\nexport function someActionCreator () {\n    dispatch({\n        type: USER_LOGIN_START \n    })\n\n    return login()\n    .then(data => {\n        return dispatch({\n            type: USER_LOGIN_OK,\n            data\n        })\n    })\n    .catch(e => {\n        return dispatch({\n            type: USER_LOGIN_ERR,\n            data: e\n        })\n    })\n}",
    "import {\n    USER_LOGIN_ERR,\n    USER_LOGIN_OK,\n    USER_LOGIN_START\n} from '../actions/user'\n\nexport default function (state, action) {\n    switch(action.type){\n        case USER_LOGIN_START:\n            return {\n                fetching: true\n            };\n        case USER_LOGIN_OK:\n            return {\n                fetching: false,\n                admin: true\n            };\n        case USER_LOGIN_ERR:\n            return {\n                fetching: false,\n                admin: false\n            };\n        default: \n            return {...state};\n    }\n}",
    "import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\nimport {socket, user, track, connection} from './reducers'\n\nconst middleware = process.env.NODE_ENV === 'production' ?  [thunk] : [thunk, logger]\n\nconst init = {\n    user: {\n        admin: false\n    },\n    connection: {\n        connected: false\n    },\n    track: {\n        play: false\n    }\n}\n\nconst reducer = combineReducers({\n    user,\n    track,\n    connection,\n    musicList: socket\n})\n\n\nconst store = createStore(reducer, init, applyMiddleware(...middleware))\n\nexport const dispatch = store.dispatch\n\nexport default store",
    "import {\n    SYNC_TRACK,\n    WAIT_NEXT\n} from '../actions/track'\n\nconst getState = (state, action) => {\n    if (state.play) {\n        return {\n            ...state\n        }\n    } else {\n        return {\n            play: true,\n            ...action.data\n        }\n    }\n}\n\nexport default function (state, action) {\n    switch(action.type){\n        case SYNC_TRACK:\n            return getState(state, action)\n        case WAIT_NEXT:\n            return {\n                play: false\n            }\n        default: \n            return {...state};\n    }\n}",
    "import {\n    SOCKET_ERROR,\n    SOCKET_START,\n    SOCKET_MESSAGE,\n    SET_CONNECTION\n} from '../actions/socket'\n\nexport default function (state, action) {\n    switch (action.type){\n        case SOCKET_START:\n            return {\n                ...state,\n                ...action.data\n            };\n        case SOCKET_MESSAGE:\n            return {\n                ...action.data\n            };\n        case SOCKET_ERROR:\n            return {\n                ...state,\n                ...action.data\n            };\n        default: \n            return {\n                ...state\n            };\n    }\n}\n\nexport function connection(state, action){\n    if(action.type === SET_CONNECTION){\n        return {\n            ...action.data\n        }\n    } else{\n        return {...state}\n    }\n}",
    "import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport styled from 'styled-components'\nimport { List, Header } from 'semantic-ui-react'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    max-width: 500px;\n    width: 96%;\n    margin: 8px;\n    padding: 8px;\n`\n\nclass Playlist extends Component{\n    render(){\n        const {playlist} = this.props;\n\n        if(!playlist || !playlist.list){\n            return <Wrapper>\n                    <Header icon>Empty playlist...</Header>\n                </Wrapper>\n        }\n\n        return <Wrapper>\n            <List divided relaxed>\n                {\n                    playlist.list.map((item, i) => <List.Item key={i}>\n                        <List.Icon name='music' size='large' verticalAlign='middle' />\n                        <List.Content>\n                            <List.Header>{item.trackName}</List.Header>\n                            <List.Description>{item.artistName}</List.Description>\n                        </List.Content>\n                    </List.Item>\n                    )\n                }\n            </List>  \n        </Wrapper>   \n    }\n}\n\nexport default connect(({musicList}) => ({playlist: musicList}))(Playlist)\n",
    "import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport styled from 'styled-components'\nimport {Loader} from 'semantic-ui-react'\nimport AudioPlayer from \"react-h5-audio-player\";\nimport {getNext} from '../../model/actions'\nimport { Header } from 'semantic-ui-react'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    max-width: 500px;\n    width: 96%;\n    margin: 8px;\n    padding: 16px;\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 3px 0px;\n`\n\nconst LoaderWrapper = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    height: 100px;\n`\n\nconst Heading = styled.div`\n    margin: 0 25px 0 25px;\n`\n\nconst Loading = () => <LoaderWrapper><Loader active>loading</Loader></LoaderWrapper>\n\nclass Player extends Component{\n    shouldComponentUpdate(nextProps){\n        return !nextProps.play\n    }\n\n    onEnd = () => {\n        getNext(this.props.id)\n    }\n\n    componentDidUpdate(nextProps){\n        if (!this.props.play && nextProps.play){\n            this.player.audio.play()\n        }\n        // this.player.audio.play()\n    }\n\n    render (){\n        const {track} = this.props;\n        if(!track.trackName){\n            return <Loading />\n        }\n\n        const {trackUrl, trackName, artistName} = track;\n\n        return <Wrapper>\n            <Heading>\n                <Header size='medium'>{trackName}</Header>\n                <Header.Subheader>{artistName}</Header.Subheader>\n            </Heading>\n    \n            <AudioPlayer\n                controls={true}\n                ref={c => (this.player = c)} \n                onEnded={this.onEnd}\n                src={trackUrl}\n                autoPlay \n                />  \n                </Wrapper>\n    }\n}\n\nexport default connect(({track}) => ({track}))(Player)",
    "import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {disconnect, connect as con, send} from '../../model/actions/socket'\nimport {getNext} from '../../model/actions'\nimport List from './List'\nimport Player from './Player';\n\nclass Root extends Component{\n    constructor(props){\n        super(props)\n        const {id} = this.props.match.params;\n        con(id)\n    }\n\n    componentWillUnmount(){\n        disconnect();\n    }\n\n    componentWillReceiveProps(nextProps){\n        const {connection} = this.props;\n        const {connection: nextConnection} = nextProps;\n        if(!connection.connected && nextConnection.connected){\n            const {id} = this.props.match.params;\n\n            setTimeout(send, 0, id)\n        }\n    }\n\n    onEnd = () => {\n        const {id} = this.props.match.params;\n\n        getNext(id)\n    }\n\n    render (){\n        const {id} = this.props.match.params;\n        return <>\n            <Player id={id} />\n            <List />          \n        </>\n    }\n}\n\nexport default connect(({connection}) => ({connection}))(Root)",
    "import React, { Component } from 'react'\nimport {Provider} from 'react-redux'\nimport { Route, Switch } from 'react-router'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './model/store'\nimport {Root} from './ui/containers'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Provider store={store}>\n        <Switch>\n          <Route exact path='/:id' component={Root} />\n          <Route exact path='/admin' component={Root} />\n          <Route exact path='/admin/:admin' component={Root} />\n        </Switch>\n        </Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components'\n\nimport App from './App';\n\n// styled\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n  };\n\n  .flex{\n      box-shadow: none!important;\n  }\n\n  #root{\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n  }\n`\n\nReactDOM.render(<>\n    <App />\n    <GlobalStyle />\n</>, document.getElementById('root'));\n"
  ],
  "sourceRoot": ""
}